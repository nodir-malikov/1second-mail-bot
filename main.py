import logging

from aiogram import Bot, Dispatcher, executor, types

from config import API_TOKEN, EMAIL_DOMAIN
import keyboard as kb
from onesec_api import Mailbox
import asyncio
from bs4 import BeautifulSoup


logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(content_types=['text'])
async def texthandler(m: types.Message):
    if m.text != '‚úâÔ∏è –ü–æ–ª—É—á–∏—Ç—å –ø–æ—á—Ç—É':
        await m.answer(
            f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {m.from_user.mention}\n–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.\n–ù–∞–∂–º–∏ '
            f'–Ω–∞ –∫–Ω–æ–ø—É –Ω–∏–∂–µ üëá',
            reply_markup=kb.menu)
    elif m.text == '‚úâÔ∏è –ü–æ–ª—É—á–∏—Ç—å –ø–æ—á—Ç—É':
        mail = Mailbox('')
        email = f'{mail.mailbox_}@{EMAIL_DOMAIN}'
        await m.answer(
            f'üì´ –í–æ—Ç —Ç–≤–æ—è –ø–æ—á—Ç–∞: {email}\n–û—Ç–ø—Ä–∞–≤–ª—è–π –ø–∏—Å—å–º–æ.\n–ü–æ—á—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥, '
            f'–µ—Å–ª–∏ –ø—Ä–∏–¥–µ—Ç –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ, –º—ã –≤–∞—Å –æ–± —ç—Ç–æ–º –æ–ø–æ–≤–µ—Å—Ç–∏–º!\n–ù–∞ 1 –ø–æ—á—Ç—É –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ - 1 –ø–∏—Å—å–º–æ.\n–ù–∞—à '
            f'–∫–∞–Ω–∞–ª @slivmens')

        last_length = 0
        while True:
            filtered_mail = mail.filtered_mail()
            if isinstance(filtered_mail, list):
                if last_length == len(filtered_mail):
                    pass
                else:
                    last_length = len(filtered_mail)

                    new_mail = mail.mail_jobs('read', filtered_mail[0])

                    js = new_mail.json()
                    sender = js['from']
                    theme = js['subject']
                    mes = js['body']
                    cleantext = BeautifulSoup(mes, "html.parser")
                    cleantext = "\n".join(item.strip() for item in cleantext.find_all(text=True))
                    await m.answer(
                        f'üì© –ù–æ–≤–æ–µ –ø–∏—Å—å–º–æ:\n<b>–û—Ç</b>: {sender}\n'
                        f'<b>–¢–µ–º–∞</b>: {theme}\n<b>–°–æ–æ–±—â–µ–Ω–∏–µ</b>: \n\n{cleantext}',
                        reply_markup=kb.menu, parse_mode='HTML')

            await asyncio.sleep(1)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
